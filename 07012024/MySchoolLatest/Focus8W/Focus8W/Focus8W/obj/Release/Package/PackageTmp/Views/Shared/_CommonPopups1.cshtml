@using SchoolBones
@using SchoolBones.DataStructs
@using SchoolBones.Enums
@using SchoolBones.Common

@model IdValuePair

@{
    string sPopupId = "popup";
    string popupTitle = "";
    IdValuePair popupData = null;
    AdmissionDetails oAdmissionDetails = null;
    Subject oSubject = null;
    List<StudentAttendance> lstStudent = null;

    TeacherDetails[] lstTeacher = null;
    TeacherDetails oTeacherDetails = null;
    FeesStructure oFeesStructure = null;
    int iFeeStructureId = 0;


    popupData = Model;

    if (popupData != null)
    {
        if (popupData.Id == (int)PopupName.SaveFeeStructure)
        {
            sPopupId += (PopupName)popupData.Id;
            popupTitle = "Save Fee Structure";
            oFeesStructure = (FeesStructure)popupData.Value;
        }
        else if (popupData.Id == (int)PopupName.DeleteFeeStructure)
        {
            sPopupId += (PopupName)popupData.Id;
            popupTitle = "Save Fee Structure";
            iFeeStructureId = (int)popupData.Value;
        }
        else if (popupData.Id == (int)PopupName.UpdateFeeStructure)
        {
            sPopupId += (PopupName)popupData.Id;
            popupTitle = "Update Fee Structure";
            oFeesStructure = (FeesStructure)popupData.Value;
        }
        else if (popupData.Id == (int)PopupName.EditTeacherDetails)
        {
            sPopupId += (PopupName)popupData.Id;
            popupTitle = "Edit Teacher Details";
            oTeacherDetails = (TeacherDetails)popupData.Value;
        }
        else if (popupData.Id == (int)PopupName.TakeTeacherAttendance)
        {
            sPopupId += (PopupName)popupData.Id;
            popupTitle = "Take Teacher Attendance";
            lstTeacher = (TeacherDetails[])popupData.Value;
        }
        else if (popupData.Id == (int)PopupName.EditStudent)
        {
            sPopupId += (PopupName)popupData.Id;
            popupTitle = "Edit Student";
            oAdmissionDetails = (AdmissionDetails)popupData.Value;
        }
        else if (popupData.Id == (int)PopupName.AddSubject)
        {
            sPopupId += (PopupName)popupData.Id;
            popupTitle = "Add Subject";
            oSubject = (Subject)popupData.Value;
        }
        else if (popupData.Id == (int)PopupName.TakeStudentAttendance)
        {
            sPopupId += (PopupName)popupData.Id;
            popupTitle = "Take Student Attendance";
            lstStudent = (List<StudentAttendance>)popupData.Value;
        }
    }
}


<div class="modal fade right" id="@sPopupId" data-bs-backdrop="static" role="dialog">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@popupTitle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form>
                    @{
                        if (popupData.Id == (int)PopupName.DeleteFeeStructure)
                        {
                            <input type="hidden" id="hdnFeeStructureId" value="@iFeeStructureId" />
                            <span>Do you want to delete the record?</span>
                        }
                        else if (popupData.Id == (int)PopupName.EditStudent)
                        {
                            <div class="mb-3">
                                <img src="~/Image/QR.png" />
                            </div>
                            <div class="mb-3">
                                <label for="recipient-name" class="col-form-label">Enrollment No</label>
                                <input id="txtEnrollmentNo" type="text" class="form-control" value="@oAdmissionDetails.RegistrationId" readonly>
                            </div>

                            <div class="mb-3">
                                <label for="message-text" class="col-form-label">Name:</label>
                                <input id="txtStdName" type="text" class="form-control" value="@oAdmissionDetails.StdName">
                            </div>

                            <div class="mb-3">
                                <label for="message-text" class="col-form-label">Address</label>
                                <input id="txtAddress" type="text" class="form-control" value="@oAdmissionDetails.Address">
                            </div>

                            <div class="mb-3">
                                <label for="message-text" class="col-form-label">City</label>
                                <input id="txtCity" type="text" class="form-control" value="@oAdmissionDetails.City">
                            </div>

                            <div class="mb-3">
                                <label for="message-text" class="col-form-label">Contact</label>
                                <input id="txtContact" type="text" class="form-control" value="@oAdmissionDetails.Contact">
                            </div>

                            <div class="mb-3">
                                <label for="message-text" class="col-form-label">AdmissionInClass</label>
                                <input id="txtAdmissionInClass" type="text" class="form-control" value="@oAdmissionDetails.AdmissionInClass">
                            </div>

                            <div class="mb-3">
                                <label for="message-text" class="col-form-label">DOB</label>
                                <input id="txtDOB" type="text" class="form-control" value="@oAdmissionDetails.DOB">
                            </div>

                            <div class="mb-3">
                                <label for="message-text" class="col-form-label">Admission Date</label>
                                @*<input id="txtAdmissionDate" type="text" class="form-control" value="@oAdmissionDetails.AdmissionDate">*@
                                <input id="txtAdmissionDate" type="date" class="form-control" placeholder="yyyy-mm-dd" min="2023-01-01" max="2023-12-31" value="@oAdmissionDetails.AdmissionDate" />
                            </div>

                            <div class="mb-3">
                                <label class="form-check-label" for="flexCheckChecked">
                                    <input class="form-check-input" type="checkbox" value="" id="chkIsActive" checked="@oAdmissionDetails.IsActive">
                                    Active
                                </label>
                            </div>
                        }
                        else if (popupData.Id == (int)PopupName.AddSubject)
                        {
                            string sSub = oSubject.SubjectName;
                            <input type="hidden" id="hdnClass" value="@oSubject.Class" />
                            <div class="mb-3">
                                <label for="message-text" class="col-form-label">Subject Name</label>
                                <input id="txtSubjectName" type="text" class="form-control" value="@sSub">
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="" id="chkIsDefaultSubject">
                                    <label class="form-check-label" for="flexCheckChecked">
                                        DefaultSubject
                                    </label>
                                </div>
                            </div>
                        }
                        else if (popupData.Id == (int)PopupName.SaveFeeStructure || popupData.Id == (int)PopupName.UpdateFeeStructure)
                        {
                            <div class="form-group">
                                <label class="control-label">Fee Structure Id</label>
                                <input id="txtFeeStructureId" type="text" class="form-control" value="@(oFeesStructure == null ? 0 : oFeesStructure.FeeStructureId)" readonly />
                            </div>
                            <div class="form-group">
                                <label class="control-label">Class</label>
                                <input id="txtClass" type="text" class="form-control" value="@(oFeesStructure == null ? 0 : oFeesStructure.Class)" />
                            </div>
                            <div class="form-group">
                                <label class="control-label">Year</label>
                                <input id="txtYear" type="text" class="form-control" value="@(oFeesStructure == null ? 0 : oFeesStructure.Year)" />
                            </div>
                            <div class="form-group">
                                <label class="control-label">Monthly Fee</label>
                                <input id="txtMonthlyFee" type="text" class="form-control" value="@(oFeesStructure == null ? 0 : oFeesStructure.MonthlyFee)" />
                            </div>
                            <div class="form-group">
                                <label class="control-label">Yearly Fee</label>
                                <input id="txtYearlyFee" type="text" class="form-control" value="@(oFeesStructure == null ? 0 : oFeesStructure.YearlyFee)" />
                            </div>
                        }

                    }
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="Close(@sPopupId)">Close</button>
                @{
                    //Admin
                    if (popupData.Id == (int)PopupName.DeleteFeeStructure)
                    {
                        <input type="button" class="btn btn-primary" value="Yes" onclick="DeleteFeesStructure(@iFeeStructureId)" data-bs-dismiss="modal" />
                    }
                    else if (popupData.Id == (int)PopupName.SaveFeeStructure)
                    {
                        <input type="button" class="btn btn-primary" value="SaveFeeStructure" onclick="SaveUpdateFeesStructure()" />
                    }
                    else if (popupData.Id == (int)PopupName.UpdateFeeStructure)
                    {
                        <input type="button" class="btn btn-primary" value="UpdateFeeStructure" onclick="SaveUpdateFeesStructure()" />
                    }
                    else if (popupData.Id == (int)PopupName.EditTeacherDetails)
                    {
                        <button type="button" class="btn btn-primary" onclick="SaveEditTeacher()">Save</button>
                    }
                    else if (popupData.Id == (int)PopupName.TakeTeacherAttendance)
                    {
                        <button type="button" class="btn btn-primary" onclick="SaveTeacherAttendance()">Save</button>
                    }

                    if (popupData.Id == (int)PopupName.EditStudent)
                    {
                        @*<button type="button" class="btn btn-primary" onclick="SaveChanges()">Save</button>*@
                    }
                    else if (popupData.Id == (int)PopupName.AddSubject)
                    {
                        if (oSubject.SubjectId > 0)
                        {
                            <button type="button" class="btn btn-primary" onclick="UpdateSubject(@oSubject.SubjectId, @((int)CRUD.Update))">Update</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-primary" onclick="SaveSubject()">Save</button>
                        }
                    }
                    else if (popupData.Id == (int)PopupName.TakeStudentAttendance)
                    {
                        <button type="button" class="btn btn-primary" onclick="SaveAttendance()">Save</button>
                    }
                }
            </div>
        </div>
    </div>
</div>



@*<script src="~/Scripts/JSFactory/SDate.js"></script>*@
<script>
    var oSubject = @Html.Raw(Json.Encode(oSubject));

    function SaveSubject() {
        debugger
        var oSubject = {};
        oSubject.Class = parseInt(document.getElementById("hdnClass").value);
        oSubject.SubjectName = document.getElementById("txtSubjectName").value;
        oSubject.IsDefaultSubject = document.getElementById("chkIsDefaultSubject").checked;


        var url = "@Url.Action("AddSubject", "Teacher")";
        $.ajax({
            url: url,
            cache: false,
            type: "POST",
            dataType: "json",
            data: {
                oSubject: oSubject
            },
            success: function (data) {
                successSaveSubject(true, data);
            }
        });
    }
    function successSaveSubject(bSuccess, data){
        if(data.iStatus>0){
            COMMONMETHODS.ShowToastAsAlert("Saved");
            LoadSubjects();
        }else{
            COMMONMETHODS.ShowToastAsAlert("!Saved");
        }
    }

    function SaveChanges() {
        debugger;

        var txtEnrollmentNo = document.getElementById("txtEnrollmentNo");
        var txtStdName = document.getElementById("txtStdName");
        var txtFirstName = document.getElementById("txtFirstName");
        var txtLastName = document.getElementById("txtLastName");
        var txtAddress = document.getElementById("txtAddress");
        var txtCity = document.getElementById("txtCity");
        var txtContact = document.getElementById("txtContact");
        var txtAdmissionInClass = document.getElementById("txtAdmissionInClass");
        var txtDOB = document.getElementById("txtDOB");
        var chkIsActive = document.getElementById("chkIsActive");
        //var txtAdmissionDate = document.getElementById("txtAdmissionDate");
        var sSelectedDate = document.getElementById("txtAdmissionDate").value;
        var iAdmissionDate = FDate.convertDateToInt(sSelectedDate, "yyyy-mm-dd", 0);

        var oAdmissionDetails = {};
        oAdmissionDetails.iEnrollmentNo = txtEnrollmentNo.value;
        oAdmissionDetails.StdName = txtStdName.value;
        oAdmissionDetails.FirstName = txtFirstName.value;
        oAdmissionDetails.LastName = txtLastName.value;
        oAdmissionDetails.Address = txtAddress.value;
        oAdmissionDetails.City = txtCity.value;
        oAdmissionDetails.Contact = parseInt(txtContact.value);
        oAdmissionDetails.AdmissionInClass = parseInt(txtAdmissionInClass.value);
        oAdmissionDetails.DOB = parseInt(txtDOB.value);
        oAdmissionDetails.IsActive = chkIsActive.checked;
        oAdmissionDetails.AdmissionDate = iAdmissionDate;

        var url = "@Url.Action("StudentAdmission", "Teacher")";
        $.ajax({
            url: url,
            cache: false,
            type: "POST",
            dataType: "json",
            data: {
                oAdmissionDetails: oAdmissionDetails
            },
            success: function (data) {
                debugger
                successStudentAdmission(true, data);
            }
        });
    }
    function successStudentAdmission(bSuccess, data) {
        debugger;
        if (data.iStatus > 0) {
            COMMONMETHODS.ShowToastAsAlert("Updated");
        } else {
            COMMONMETHODS.ShowToastAsAlert("!Updated");
        }
    }
    function UpdateSubject(iSubjectId, iActionType) {
        debugger;
        var oSubject = {};
        var url = "@Url.Action("DoAction", "Teacher")";
        oSubject.SubjectId = iSubjectId
        oSubject.Class = parseInt(document.getElementById("hdnClass").value);
        oSubject.SubjectName = document.getElementById("txtSubjectName").value;
        $.ajax({
            url: url,
            cache: false,
            type: "POST",
            dataType: "json",
            data: {
                oSubject: oSubject,
                iActionType: iActionType
            },
            success: function (data) {
                debugger;
                successDoAction(true, data);
            }
        });
    }
    function successDoAction(bSuccess, data) {
        if (data.iStatus > 0) {
            alert("Success")
        } else {
            alert("!Success")
        }
    }
</script>

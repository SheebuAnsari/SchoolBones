@using SchoolBones
@using DomLibrary;
@using SchoolBones.Enums

@model Menu[]

@{
    int i = 0;
    Menu[] arrMenu = null;
    Array arrModules = Enum.GetValues(typeof(Modules));

    arrMenu = Model;
}

@*NOTE : via using this screen, only we need to add submodule instead of main module.*@

<div class="row">
    @Html.Partial("_HeaderNavigation", new DoubleInt(Id: (int)Modules.Admin, Value: (int)SubModule.AddMenu))

    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <label class="control-label">Menu Name</label>
                <input id="txtMenuName" type="text" class="form-control" />
            </div>

            <div class="form-group">
                <label class="control-label">Module</label>
                <select id="ddlModule" class="form-select">
                    @{
                        if (arrModules != null)
                        {
                            for (; i < arrModules.Length; i++)
                            {
                                <option value="@i">@Convert.ToString(arrModules.GetValue(i))</option>
                            }
                        }
                    }
                </select>
            </div>

            @*<div class="form-group">
                    <label class="control-label">Sub-module</label>
                    <input id="txtSubModule" type="text" class="form-control" />
                </div>*@

            <div class="form-check">
                <input id="chkAIsGroup" class="form-check-input" type="checkbox" value="">
                <label class="form-check-label" for="flexCheckChecked">
                    Is group?
                </label>
            </div>

            <input class="btn btn-primary" type="button" value="Save" onclick="DEV.SaveMenu()">
        </div>

        <div class="col-md-9" id="dvLoadMenus">
            @Html.Partial("~/Areas/DeveloperArea/Views/Shared/_LoadMenu.cshtml", arrMenu)
        </div>
    </div>
</div>


<script>
    @*var arrMenu = @Html.Raw(Json.Encode(arrMenu));*@


    //var arrIdStatusPair = [];
    //$(document).ready(function(){
    //    for (var i = 0; i < arrMenu.length; i++) {
    //        if(arrMenu[i].IsActive){
    //            arrIdStatusPair.push(arrMenu[i].MenuId)
    //        }
    //    }
    //})

    //This code for Multiple Selection
    //function GetMenuIds(ele) {
    //    debugger;
    //    var i = 0;
    //    var IdStatusPair = {};
    //    var iMenuId = parseInt(ele.id);
    //    var bChecked = ele.checked;
    //    if (ele.checked) {
    //        IdStatusPair.ID = iMenuId;
    //        IdStatusPair.Status = bChecked;
    //        arrIdStatusPair.push(IdStatusPair);
    //    } else {
    //        for (; i < arrIdStatusPair.length; i++) {
    //            if (iMenuId == arrIdStatusPair[i].ID)
    //                break;
    //        }
    //        arrIdStatusPair.splice(i, 1);
    //    }
    //}
</script>

@using SchoolBones
@using DomLibrary;
@using SchoolBones.Enums

@model TeacherDetails[]
@{
    TeacherDetails[] lstAllTeachers = Model;
}
<div class="row">
    @*<nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Link</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Dropdown
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
                    </li>
                </ul>
                <form class="d-flex">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form>
            </div>
        </div>
    </nav>*@
    
    @Html.Partial("_HeaderNavigation", new DoubleInt(Id: (int)Modules.Admin, Value: (int)SubModule.AllTeachers))

    <div class="row">
        <table class="ReportTable">
            <thead>
                <tr>
                    @*<th>
                        <input class="form-check-input" type="checkbox" id="chkSelectAll" onclick="ADMIN.SelectAll(this)">
                    </th>*@
                    <th>Registration Id</th>
                    <th>Name</th>
                    <th>Mobile</th>
                    <th>Qualification</th>
                    <th>JoiningDate</th>
                    <th>Experiance</th>
                    <th>IsActive</th>
                </tr>
            </thead>
            <tbody id="tblTeacherDetail"></tbody>
        </table>
    </div>
    <div id="dvContainerEditTeacher">

    </div>
</div>

<script>
    var lstAllTeachers = [];
    iSubModule = @Html.Raw(Json.Encode(SubModule.AllTeachers));

    lstAllTeachers = @Html.Raw(Json.Encode(lstAllTeachers));
    $(document).ready(function () {
        debugger
        ADMIN.SetTeacherDetail(lstAllTeachers, 'tblTeacherDetail');
    });

    //function SelectAll(ele) {
    //    debugger;
    //    var iRow = 0;
    //    arrTeacherIds=[];
    //    var tBody = document.getElementById("tblTeacherDetail");
    //    var tableRows = tBody.children;

    //    arrTeacherIds=[];
    //    for (; iRow < tableRows.length; iRow++) {
    //        tr = tableRows[iRow];
    //        tr.children[0].children[0].children[0].checked = ele.checked;

    //        if (ele.checked) {
    //            arrTeacherIds.push(tr.children[0].id);
    //        }
    //    }
    //}

    @*function SaveEditTeacher(){
        debugger;
        var oTeacher = {};
        var iTeacher = parseInt(document.getElementById("txtId").value);
        var iMobile = document.getElementById("txtMobile").value;
        var sEmail = document.getElementById("txtEmail").value;
        var sPassword = document.getElementById("txtPassword").value;
        var sName = document.getElementById("txtName").value;
        var sQualification = document.getElementById("txtQualification").value;
        var sJoinDate = document.getElementById("txtJoinDate").value;
        var iPackage = document.getElementById("txtPackage").value;
        var iMonthlySalary = document.getElementById("txtMonthlySalary").value;
        var iExp = document.getElementById("txtExp").value;

        oTeacher.TeacherId = iTeacher;
        oTeacher.Mobile = iMobile;
        oTeacher.Email = sEmail;
        oTeacher.Password = sPassword;
        oTeacher.Name = sName;
        oTeacher.Qualification = sQualification;
        oTeacher.JoiningDate = sJoinDate;
        oTeacher.Package = iPackage;
        oTeacher.MonthlySalary = iMonthlySalary;
        oTeacher.Experiance = iExp;

        var url = "@Url.Action("SaveTeacher", "Admin")";
        $.ajax({
            url: url,
            cache: false,
            type: "POST",
            dataType: "json",
            data: { oTeacherDetails: oTeacher },
            success: function (data) {
                successSaveTeacherDetails(true, data);
            }
        });
    }*@

    //function successSaveTeacherDetails(success, tag) {
    //    debugger;
    //    if (tag.iStatus > 0) {
    //        alert("Data saved.")
    //    }
    //}


    //function EditTeachers(iSubModule){
    //    debugger;
    //    var i = 0;
    //    var iTeacher = arrSelectedTeachers[0];
    //    for (; i < lstTeacherData.length; i++) {
    //        if(iTeacher == lstTeacherData[i].TeacherId){
    //            break;
    //        }
    //    }
    //    document.getElementById("txtId").value = lstTeacherData[i].TeacherId;
    //    document.getElementById("txtMobile").value = lstTeacherData[i].Mobile;
    //    document.getElementById("txtEmail").value = lstTeacherData[i].Email;
    //    document.getElementById("txtPassword").value = lstTeacherData[i].Password;
    //    document.getElementById("txtName").value = lstTeacherData[i].Name;
    //    document.getElementById("txtQualification").value = lstTeacherData[i].Qualification;
    //    document.getElementById("txtJoinDate").value = lstTeacherData[i].JoiningDate;
    //    document.getElementById("txtPackage").value = lstTeacherData[i].Package;
    //    document.getElementById("txtMonthlySalary").value = lstTeacherData[i].MonthlySalary;
    //    document.getElementById("txtExp").value = lstTeacherData[i].Experiance;
    //    $('#popupEditTeacher').appendTo("body").modal('show');
    //}
    //function SelectTeacher(chkTeacher){
    //    debugger;
    //    var iTeacherId = parseInt(chkTeacher.id);

    //    if(chkTeacher.checked){
    //        arrSelectedTeachers.push(iTeacherId);
    //    }else{
    //        var iIndex = arrSelectedTeachers.indexOf(iTeacherId);
    //        arrSelectedTeachers.splice(iIndex);
    //    }
    //}

    //var arrSelectedTeachers = [];
    //var arrTeachersActivation = [];
    //var lstTeacherData = [];
    debugger;
    //lstTeacherData = lstAllTeachers;






    @*function DeleteTeachers(bValue, iSubModule){
        debugger;
        //here 24 : SubModule.AllStudents
        if (iSubModule == 24) {
            COMMONMETHODS.ShowToastAsAlert("Not implemented.");
            return;
        }
        if (lstTeacherData != undefined && lstTeacherData != null)
            TEACHERCOMMONJS.GetUpdatedValueOfActivation("tblTeacherDetail");

        var url = "@Url.Action("DeleteTeachers", "Admin")";
        $.ajax({
            url: url,
            cache: false,
            type: "POST",
            dataType: "json",
            data: {
                arrSelectedTechers: arrUpdateStatus,
                bDeletePermanent : bValue
            },
            success: function (data) {
                successDeleteTeachers(true, data);
            }
        });
    }
    function successDeleteTeachers(bSuccess, data){
        if(bSuccess){
            if (data.iStatus > 0) {
                alert("Teacher is de-activated.");
            } else {
                alert("something is wrong.")
            }
        }
    }*@



    @*function Refresh(iSubModule){
        debugger;
        //here 24 : SubModule.AllStudents
        if (iSubModule == 24) {
            COMMONMETHODS.ShowToastAsAlert("Not implemented.");
            return;
        }
        var url = "@Url.Action("TeachersDetail", "Admin")";
        $.ajax({
            url: url,
            cache: false,
            type: "POST",
            dataType: "json",
            success: function (data) {
                successRefresh(true, data);
            }
        });
    }
    function successRefresh(bSuccess, data){
        debugger;
        if(bSuccess){
            COMMONMETHODS.SetDataInTable(data, "tblTeacherDetail")
        }
    }*@


</script>
